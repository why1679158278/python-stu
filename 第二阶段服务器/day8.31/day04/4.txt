前情回顾

1. 文件

   分类 ：  文本   二进制

   字节串 ：  二进制数据表达方式

             str-->bytes   encode()
             bytes-->str   decode()

2. 文件读写操作

   open() --> read()/write() -->close()

   r  w   a   b  +

3. 细节

   * 缓冲区 ： 减少了和硬盘的交互次数，提高读写效率

              flush()  行缓冲

   * 文件的偏移量： 记录文件读写位置

              tell()  seek()

练习： 编写一个程序，将指定目录input下的
大小不到 1024 字节的普通文件文件删除

正则表达式训练

1. 在一堆英文中匹配 大写字母开头的单词
   Hi,Jame How are you!

In [32]: re.findall('[A-Z][a-z]*',"Hi,Jame How ar
    ...: e you!")
Out[32]: ['Hi', 'Jame', 'How']

2. 一段文字中所有的整数
    Tom:18,Lily:20,Jame:17

In [37]: re.findall("[0-9]+","Tom:18,Lily:20,Jame
    ...: :17")
Out[37]: ['18', '20', '17']

3. 在上一个问题基础上，如果也想匹配出负整数呢
    12   56  -2  -70

In [43]: re.findall('-?[0-9]+',"12   56  -2  -70"
    ...: )
Out[43]: ['12', '56', '-2', '-70']

4. 匹配国内手机号码
   貂蝉 : 13849495656

In [47]: re.findall('1[3-9][0-9]{9}',"貂蝉 : 1384
    ...: 9495656")
Out[47]: ['13849495656']

5. 匹配qq号码

   化腾 100001  马云  556478325

In [50]: re.findall('[1-9][0-9]{5,11}',"化腾 1000
    ...: 01  马云  556478325")
Out[50]: ['100001', '556478325']


6. 匹配一下数字 包含 整数  小数  正数  负数

   18   3   3.14   -45  -5.6

In [80]: re.findall(r"-?\d+\.?\d*","18 3 3.14 -45
    ...:  -5.6")
Out[80]: ['18', '3', '3.14', '-45', '-5.6']

7. 匹配 你的日薪 $120

In [82]: re.findall(r"\$\d+","你的日薪 $120")
Out[82]: ['$120']

8. 匹配几本书名 《105男人&3女人》 《一个人，带3宠物》
《一群女人和一个小生》 《三强争霸——谁是黑帮老大》

In [94]: re.findall(r"《.+?》","《105男人&3女人》
    ...:  《一个人，带3宠物》《一群女人和一个小生
    ...: 》 《三强争霸——谁是黑帮老大》")
Out[94]: ['《105男人&3女人》', '《一个人，带3宠物》', '《一群女人和一个小生》', '《三强争霸——谁是黑帮老大》']

9. 匹配一个IP地址 ： ip: 192.168.1.5  (0-255)
In [102]: re.search(r'(\d{1,3}\.){3}\d{1,3}',"ip:
     ...:  192.168.1.5").group()
Out[102]: '192.168.1.5'

10. 匹配身份证号

In [105]: re.search(r'\d{17}(\d|x)',"110018199903
     ...: 251050").group()
Out[105]: '110018199903251050'


作业： 1. 熟练认知每个元字符
      2. 通过编程完成
         使用input 输入一个端口的名字
         获取这个端口对应的 address is 的值

         提示： 段之间有空行
               每段的第一个单词是端口名称

         思路： 1.先确定是哪一段
               2.从这段中匹配内容








