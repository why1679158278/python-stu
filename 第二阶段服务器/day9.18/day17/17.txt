前情回顾

1. IO

   什么是IO

   IO密集型 : IO操作多  cpu消耗少  耗时长
   计算密集型 : 计算多   cpu消耗大  耗时短

2. IO模型

   阻塞IO : 默认形态  效率低  简单

   非阻塞IO :  setblocking()  settimeout()

3. IO 多路复用

   select :   select()

   poll : p = poll()  p.register()
          p.unregister()  p.poll()

   epoll

   * 三种方法的对比

练习 : 将 first.html作为一个要展示的网页
当用户的请求内容是 /first.html的时候则将这个
网页内容作为一个响应体提供给浏览器

如果浏览器请求的是其他内容则 返回一个404的响应,
内容自定

要求浏览器可以循环的访问

思路 : 1 服务端循环模型
      2. 接收到请求后要提取请求内容
      3. 根据请求内容分情况讨论


web server

1. 需求分析 (http协议)

 * 采用IO网络并发  (并发网络计数)
 * 通过类接口形式进行功能封装 (封装形式)

 * 接收客户端（浏览器）请求
 * 解析客户端发送的请求
 * 根据请求组织数据内容
 * 将数据内容形成http响应格式返回给浏览器

2. 类封装

  * 在使用者的角度出发
  * 借鉴用过的类

    socket()

       实例化对象  ---> 为不同的对象准备不同的方法

       尽可能多的将功能封装,用户组合使用

    Process()

       实例化对象 ---> 调用start() 实现功能

       什么需要使用者提供
       尽可能让使用者简单

思考: 1. 使用者怎么利用这个类
     2. 实现类的功能需要使用者提供什么 (传参)

类的实现步骤

  * 创建tcp套接字  绑定

  * 创建网络并发模型 (IO多路复用)   start()

  * 实现http协议的功能


作业 : 1. webserver  自己写一下
      2. 第三门课总结
      3. 注册一个 github 账号

         github.com












